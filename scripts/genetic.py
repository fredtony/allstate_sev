import numpy as np
import pandas as pd
from sklearn.metrics import mean_absolute_error
import math


def NaiveBayes(data1, data2, columnName, useNoise=False,
               boundary=1):
    grpOutcomes = data1.groupby(columnName)['loss'].mean().reset_index()
    grpCount = data1.groupby(columnName)['loss'].count().reset_index()
    grpOutcomes['cnt'] = grpCount.loss
    grpOutcomes = grpOutcomes[grpOutcomes.cnt >= boundary]
    grpOutcomes.drop('cnt', inplace=True, axis=1)
    x = pd.merge(data2[[columnName, 'loss']], grpOutcomes,
                 suffixes=('x_', ''),
                 how='left',
                 on=columnName,
                 left_index=True)['loss']
    x = x.fillna(x.mean())
    if(useNoise):
        x = x + np.random.normal(0, .01, x.shape[0])
    return x


def GP(data):
    p = ((((data["cat79"] * (31.006277 - ((((data["cat80"] * 31.006277) * (data["cat101"] * 31.006277)) < data["cat80"]).astype(float)))) - ((31.006277 - (data["cat81"] * ((9.166670 * 2.0) * 2.0))) - (((((data["cat80"] >= 0.0).astype(float)) * (data["cat80"] * 31.006277)) + (data["cat101"] * 31.006277)) * 2.0)))) +
        ((((((data["cat7"] + ((((data["cat7"] + data["cat100"])/2.0) + (((data["cat6"] < data["cat100"]).astype(float)) + (np.sin(((data["cat5"] >= 0.0).astype(float))) - ((data["cat4"] < data["cat78"]).astype(float)))))/2.0))/2.0) + data["cat116"])/2.0) * np.maximum( ((31.006277 * 2.0)),  (np.maximum( (np.maximum( (data["cat116"]),  ((data["cat108"] * 2.0)))),  (((((14.52019977569580078) * 2.0) * 2.0) * 2.0))))))) +
        (((8.909090 * (((data["cat112"] * 2.0) + (((-((data["cat26"] + data["cat38"]))) <= data["cat53"]).astype(float))) * 2.0)) + ((8.909090 - (data["cat26"] + data["cat38"])) * ((data["cat103"] + (data["cat57"] + (((-(data["cat57"])) <= (data["cat53"] * 2.0)).astype(float)))) * 2.0)))) +
        ((((((((data["cat80"] * -3.0) * ((data["cat94"] < ((((np.minimum( (data["cat80"]),  (data["cat80"])) <= data["cat80"]).astype(float)) <= (data["cat80"] + 0.0)).astype(float))).astype(float))) + (((np.sin(((data["cat37"] < data["cat80"]).astype(float))) * ((data["cat108"] >= 0.0).astype(float))) - data["cat80"]) + ((9.57686519622802734) * data["cat116"]))) * data["cat80"]) * 2.0) * 2.0) * 2.0)) +
        (np.maximum( (((31.006277 * (data["cat44"] + data["cat37"])) * 2.0)),  (((data["cat111"] * (np.minimum( (31.006277),  (data["cont11"])) * 31.006277)) + (np.maximum( ((31.006277 * (data["cat44"] + data["cat114"]))),  ((data["cat111"] * 31.006277))) + (data["cat106"] + ((np.minimum( (data["cat87"]),  (data["cont11"])) * (9.166670 * 2.0)) * 2.0))))))) +
        (((((data["cat108"] * 8.909090) - (data["cat7"] * ((10.13226890563964844) + data["cat80"]))) + ((8.909090 * (((((data["cat12"] * 2.0) - data["cat80"]) + ((data["cat108"] >= 0.0).astype(float)))/2.0) - ((np.tanh(data["cat81"]) >= (1.0/(1.0 + np.exp(- ((data["cat72"] >= 0.0).astype(float)))))).astype(float)))) - data["cat81"])) - (((data["cat23"] >= data["cat72"]).astype(float)) * 2.0))) +
        ((data["cont2"] + (data["cont2"] + (((np.minimum( ((data["cont2"] * 2.0)),  (((np.minimum( ((data["cat101"] * 2.0)),  ((((((data["cont2"] * 2.0) * 2.0) - (data["cat101"] * 2.0)) * 2.0) * 2.0))) * 2.0) - (8.909090 * np.minimum( (data["cat50"]),  (data["cat68"])))))) * 2.0) * 2.0) - (((1.011360 <= (data["cat33"] * 0.597222)).astype(float)) * 2.0))))) +
        (((((np.sin((data["cat45"] + ((data["cont2"] * 2.0) - (((data["cat109"] <= ((data["cat82"] <= ((data["cat52"] <= (-((((data["cat114"] + data["cat2"])/2.0) + data["cat1"])))).astype(float))).astype(float))).astype(float)) * 2.0)))) + (data["cat103"] * 2.0)) + (((data["cat57"] + np.sin((-(data["cat116"])))) * 2.0) * 2.0)) * 2.0) * 2.0)) +
        (((((data["cat91"] * 2.0) - (data["cat80"] + (((data["cat89"] * 2.0) * 2.0) + (-((data["cont13"] + (np.maximum( ((((np.maximum( (data["cont14"]),  (data["cat89"])) > np.cos((1.0/(1.0 + np.exp(- (1.0/(1.0 + np.exp(- data["cat79"])))))))).astype(float)) * 2.0)),  (data["cat90"])) - ((data["cat89"] * 2.0) * 2.0)))))))) * 3.0) - (data["cat79"] + 3.0))) +
        (((12.83029270172119141) * ((((((((data["cat25"] > (-(data["cat52"]))).astype(float)) * 2.0) * 2.0) + ((12.83029270172119141) * ((data["cat57"] >= np.cos((data["cat12"] + ((0.367879 < ((data["cont7"] >= (1.0/(1.0 + np.exp(- (((1.0/(1.0 + np.exp(- np.tanh(data["cont7"])))) + data["cat52"])/2.0))))).astype(float))).astype(float))))).astype(float))))/2.0) * data["cont2"]) * data["cont7"]))) +
        (((((data["cat113"] * 2.0) * 2.0) + (((data["cat103"] + ((((data["cat113"] + (((data["cont14"] - (data["cat101"] + ((data["cat84"] > np.sin(np.sin(data["cat3"]))).astype(float)))) - data["cat116"]) - data["cat116"]))/2.0) * 2.0) * 2.0)) - np.sin(((np.tanh(((data["cat100"] + data["cat87"])/2.0)) >= 0.0).astype(float)))) * 2.0)) - np.sin(data["cat81"]))) +
        (((data["cont11"] + (data["cat73"] * 9.750000)) + (31.006277 * np.minimum( (data["cont11"]),  ((data["cat81"] * ((((data["cat73"] > ((data["cat81"] > (data["cat82"] + np.maximum( (data["cat59"]),  ((1.0/(1.0 + np.exp(- data["cont2"]))))))).astype(float))).astype(float)) + (data["cat75"] - ((data["cat75"] <= ((data["cat75"] >= data["cat79"]).astype(float))).astype(float)))) / 2.0))))))) +
        ((np.minimum( ((((8.909090 * data["cat91"]) > ((data["cat100"] <= data["cat53"]).astype(float))).astype(float))),  ((data["cat72"] + (data["cat12"] + np.maximum( (data["cat44"]),  (np.maximum( (((data["cat70"] <= (data["cat44"] + data["cat25"])).astype(float))),  (((((np.minimum( (data["cat91"]),  (data["cat2"])) >= 0.0).astype(float)) + ((data["cat94"] < ((data["cat44"] + data["cat49"]) + data["cat49"])).astype(float)))/2.0))))))))) * 9.869604)) +
        ((((data["cat76"] * 9.750000) + ((data["cat75"] * ((9.750000 + (np.maximum( ((1.414214 - ((-((data["cat100"] * 9.166670))) * 2.0))),  ((data["cat87"] * ((9.750000 * 2.0) * 2.0)))) * 2.0))/2.0)) * 2.0)) + (((-((data["cat100"] * np.minimum( (9.750000),  (((data["cont7"] < data["cont9"]).astype(float))))))) * 2.0) * 2.0))) +
        ((8.909090 * (8.909090 * np.minimum( (np.maximum( (data["cat67"]),  (data["cat49"]))),  (((data["cat112"] + ((np.minimum( (8.909090),  ((((data["cat10"] * (-(np.maximum( (1.570796),  (data["cat49"]))))) + (((8.909090 * data["cat49"]) > data["cat10"]).astype(float)))/2.0))) + (1.0/(1.0 + np.exp(- data["cat76"]))))/2.0))/2.0)))))) +
        ((((data["cat53"] >= (-(np.minimum( (data["cat4"]),  (((data["cat11"] > ((data["cat113"] > data["cat6"]).astype(float))).astype(float))))))).astype(float)) * (((data["cat11"] >= np.minimum( (data["cat53"]),  (data["cat101"]))).astype(float)) * (((data["cat53"] >= (-(np.minimum( (data["cat4"]),  ((np.minimum( (data["cat11"]),  (data["cat101"])) - data["cat4"])))))).astype(float)) * (data["cat53"] - 9.750000))))) +
        ((((data["cat12"] * ((data["cat12"] * ((np.minimum( ((data["cat113"] - (data["cat81"] + (-(np.minimum( ((data["cat113"] - (data["cat5"] + (-(((data["cat7"] < (-(data["cat5"]))).astype(float))))))),  (((data["cat23"] < (-(data["cat5"]))).astype(float))))))))),  (np.maximum( (data["cat90"]),  (data["cont3"])))) * 2.0) * 2.0)) * 2.0)) * 2.0) * 2.0)) +
        ((((-((data["cat80"] * 9.869604))) - 2.0) * (((data["cat6"] * 2.0) - (((data["cont2"] - ((data["cat41"] >= ((data["cat100"] + (data["cat112"] + (1.570796 * data["cat72"])))/2.0)).astype(float))) + (((data["cont2"] - ((data["cat41"] >= data["cat82"]).astype(float))) + data["cat72"])/2.0))/2.0)) * 2.0))) +
        (((((data["cat8"] >= data["cat42"]).astype(float)) + ((((data["cat8"] - data["cat24"]) * 2.0) - ((data["cat82"] <= ((data["cat83"] <= (data["cat24"] * 2.0)).astype(float))).astype(float))) * 2.0)) + (data["cat42"] * ((data["cat82"] * 2.0) - ((0.736264 - 31.006277) * 2.0))))) +
        ((data["cat105"] + ((np.minimum( (((data["cat55"] - np.minimum( ((-(data["cat106"]))),  (np.minimum( (data["cat116"]),  (np.cos(data["cat49"])))))) * 2.0)),  (((data["cat106"] - np.minimum( (data["cat79"]),  ((np.minimum( (data["cat79"]),  (((((data["cat110"] <= np.sin((-(data["cat1"])))).astype(float)) * 2.0) * 2.0))) * 2.0)))) * 2.0))) * 2.0) * 2.0))) +
        ((((((np.maximum( (data["cat23"]),  (data["cat100"])) * 2.0) - ((data["cat100"] >= data["cat114"]).astype(float))) * 2.0) * 2.0) + (data["cont11"] - ((data["cat101"] >= ((((data["cat99"] > (2.718282 * 2.0)).astype(float)) + ((data["cat23"] + data["cont11"])/2.0))/2.0)).astype(float))))) +
        ((((((data["cont14"] * data["cat1"]) >= data["cat50"]).astype(float)) - np.cos(((-(((((data["cont14"] < data["cat47"]).astype(float)) > np.cos(((-((data["cont14"] * (9.166670 + np.tanh(((1.011360 + (data["cont14"] * (data["cont14"] * data["cat1"])))/2.0)))))) * 2.0))).astype(float)))) * 2.0))) * 2.0)) +
        ((((8.95100212097167969) * ((((((data["cont14"] + (1.0/(1.0 + np.exp(- (8.95100212097167969)))))/2.0) + data["cat80"]) <= np.maximum( ((((data["cat115"] > np.cos(np.cos(data["cat115"]))).astype(float)) * 2.0)),  (data["cat90"]))).astype(float)) * 2.0)) - (data["cat112"] * ((8.909090 + np.cos(((data["cat80"] >= np.cos(data["cat36"])).astype(float))))/2.0)))) +
        (((data["cont2"] * ((data["cat81"] * (((data["cont6"] * (1.732051 * (data["cont6"] + data["cont12"]))) * (((np.maximum( (data["cat103"]),  (np.minimum( (9.869604),  (data["cat100"])))) * 2.0) * 2.0) * 2.0)) * ((np.minimum( (data["cont2"]),  (((data["cont6"] >= 0.0).astype(float)))) * 2.0) + (data["cat81"] * ((data["cont2"] * 2.0) * 2.0))))) * 2.0)) * 2.0)) +
        (((((-(np.sin((((np.minimum( ((((data["cat80"] * (data["cat81"] - ((data["cat79"] + np.sin(data["cat7"]))/2.0))) + np.sin(data["cat38"]))/2.0)),  (((data["cat80"] < data["cat4"]).astype(float)))) >= 0.0).astype(float)) * 2.0)))) * 2.0) - (((data["cat4"] + (data["cat80"] * (data["cat81"] - data["cat79"]))) >= 0.0).astype(float))) * 2.0)) +
        ((((((data["cat9"] >= 0.0).astype(float)) * ((((-(data["cont2"])) * 2.0) * 2.0) * (data["cat114"] - data["cat108"]))) >= (np.maximum( (data["cat9"]),  ((np.maximum( (data["cat79"]),  ((data["cat108"] - (((float(2.718282 >= 0.0)) * ((data["cat2"] + ((data["cat73"] >= 0.0).astype(float))) * (data["cat114"] - ((data["cat79"] >= 0.0).astype(float))))) / 2.0)))) / 2.0))) / 2.0)).astype(float))) +
        ((((2.718282 * (3.141593 * (np.maximum( ((data["cat101"] * 2.0)),  (2.718282)) * (data["cat113"] * data["cat105"])))) * np.maximum( (np.maximum( (((data["cat33"] >= 0.0).astype(float))),  ((((data["cat101"] * 2.0) * 2.0) * data["cat57"])))),  (((data["cat101"] * 2.0) * 2.0)))) * 2.0)) +
        (((((((((((data["cat7"] + np.maximum( (data["cat53"]),  (data["cat79"]))) * (data["cont2"] - ((data["cont2"] <= np.cos(((data["cat53"] >= np.tanh((np.minimum( (data["cat5"]),  (data["cont2"])) - (data["cont6"] / 2.0)))).astype(float)))).astype(float)))) * 2.0) * 2.0) - data["cat7"]) + data["cat36"]) - data["cat7"]) + data["cat7"]) * 2.0) + np.tanh(data["cat23"]))) +
        ((((((np.minimum( (((0.228571 <= (data["cat2"] - (((-(((data["cat73"] + data["cat73"])/2.0))) + np.sin(((data["cat50"] >= np.sin(np.sin(np.minimum( (data["cat113"]),  (np.tanh(((data["cat79"] + np.minimum( (data["cat113"]),  (data["cat108"])))/2.0))))))).astype(float))))/2.0))).astype(float))),  (0.964912)) * 2.0) * 2.0) - np.tanh(data["cat108"])) * 2.0) * 2.0)) +
        (((0.847826 - (((data["cat57"] + (((np.maximum( (data["cat6"]),  (np.cos(2.0))) <= data["cat100"]).astype(float)) * 2.0))/2.0) * 2.0)) - ((data["cat91"] + (((data["cont14"] >= ((data["cat49"] + (1.0/(1.0 + np.exp(- ((data["cat112"] < data["cont8"]).astype(float))))))/2.0)).astype(float)) * 2.0))/2.0))) +
        (((((data["cat12"] > (data["cat100"] * 2.0)).astype(float)) - (((data["cat100"] <= ((data["cat7"] >= ((np.tanh((data["cat100"] * 2.0)) >= 0.0).astype(float))).astype(float))).astype(float)) * 2.0)) * ((((data["cat12"] > (((data["cat12"] <= data["cat16"]).astype(float)) * 2.0)).astype(float)) * ((data["cat12"] + ((data["cat100"] < np.cos((float(0.847826 >= 0.0)))).astype(float))) * 2.0)) * 2.0))) +
        (((((data["cat36"] + np.sin(((data["cat9"] >= data["cat36"]).astype(float)))) - ((data["cat9"] >= ((data["cat75"] <= (data["cat99"] - ((data["cat9"] >= ((((data["cat2"] >= np.maximum( ((((data["cat110"] + data["cat9"]) >= data["cat60"]).astype(float))),  (data["cat99"]))).astype(float)) <= data["cat99"]).astype(float))).astype(float)))).astype(float))).astype(float))) * 2.0) * 2.0)) +
        (((data["cat80"] * ((data["cat80"] + ((data["cat80"] * ((data["cat80"] * (-(((data["cat94"] > (((((data["cat80"] < data["cat80"]).astype(float)) * 2.0) >= (data["cat94"] - ((data["cat85"] >= (data["cat94"] - (data["cat44"] - ((((data["cat80"] <= data["cat44"]).astype(float)) / 2.0) * 2.0)))).astype(float)))).astype(float))).astype(float))))) * 2.0)) * 2.0)) * 2.0)) * 2.0)) +
        ((((np.minimum( (data["cat80"]),  (((((data["cat90"] <= data["cat112"]).astype(float)) > ((data["cat90"] >= data["cat82"]).astype(float))).astype(float)))) + data["cat113"]) + data["cat82"]) * ((3.136360 * ((((((((((data["cat3"] <= data["cat112"]).astype(float)) > data["cat80"]).astype(float)) + data["cat79"]) * 2.0) + (data["cat80"] * 2.0))/2.0) + data["cat79"]) * 2.0)) / 2.0))) +
        ((((data["cat65"] - ((((np.tanh(data["cont3"]) <= ((np.minimum( (data["cat101"]),  (np.tanh(data["cat72"]))) - ((data["cat113"] > np.tanh((data["cat72"] / 2.0))).astype(float))) * 2.0)).astype(float)) * 2.0) + ((data["cat38"] > ((data["cat113"] > np.tanh((np.tanh(data["cat101"]) / 2.0))).astype(float))).astype(float)))) * 2.0) * 2.0)) +
        (((((data["cat50"] + (((data["cat79"] > (((((data["cat72"] + data["cat81"])/2.0) <= data["cat72"]).astype(float)) - data["cat79"])).astype(float)) * (((data["cont2"] - ((data["cat81"] >= data["cat72"]).astype(float))) + (((data["cat72"] > (data["cat75"] - data["cat82"])).astype(float)) * data["cont2"])) * 2.0))) * 2.0) - (data["cat79"] * np.cos(data["cat81"]))) * 2.0)) +
        ((((data["cont6"] >= data["cat10"]).astype(float)) * (np.maximum( (((np.minimum( (data["cat16"]),  (((data["cat11"] >= data["cat10"]).astype(float)))) * 2.0) * 2.0)),  ((((data["cat36"] >= ((data["cat91"] <= (((data["cat16"] >= data["cat4"]).astype(float)) - (((data["cat100"] + ((data["cat51"] + (-(((data["cat91"] > np.maximum( (9.166670),  (data["cat16"]))).astype(float)))))/2.0)) >= 0.0).astype(float)))).astype(float))).astype(float)) * 2.0))) * 2.0))) +
        (((((((-(data["cat100"])) * (((data["cat5"] <= (((data["cat100"] > ((data["cat108"] <= data["cat108"]).astype(float))).astype(float)) - data["cat108"])).astype(float)) * 2.0)) - (data["cat5"] * 2.0)) - ((data["cat108"] >= ((data["cat100"] >= data["cat108"]).astype(float))).astype(float))) - ((data["cat111"] >= ((data["cat100"] >= data["cat28"]).astype(float))).astype(float))) * 2.0)) +
        ((((data["cat100"] + (((data["cat116"] <= data["cat109"]).astype(float)) * (data["cat80"] + (data["cat80"] + data["cat116"])))) - (-((((data["cat116"] <= data["cat108"]).astype(float)) + (np.minimum( (((data["cat116"] <= data["cat108"]).astype(float))),  ((data["cat80"] + np.maximum( (data["cat116"]),  (data["cat11"]))))) - data["cat80"]))))) + data["cat110"])) +
        ((((data["cont11"] > np.tanh((float(8.909090 >= 0.0)))).astype(float)) - (3.0 * np.minimum( (((((data["cont11"] >= 0.0).astype(float)) + ((data["cat15"] >= (8.909090 * 2.0)).astype(float))) - (data["cat32"] * (8.909090 * 2.0)))),  (((data["cont1"] >= ((data["cat91"] <= ((((data["cat100"] >= data["cat6"]).astype(float)) <= np.minimum( (data["cat95"]),  (data["cont11"]))).astype(float))).astype(float))).astype(float))))))) +
        ((((((((-(((((((data["cat115"] > 0.847826).astype(float)) >= 0.0).astype(float)) > 1.906980).astype(float)))) > (float(0.847826 >= 0.0))).astype(float)) >= ((data["cont6"] < 0.847826).astype(float))).astype(float)) >= ((0.847826 <= (data["cat116"] + ((0.847826 <= (data["cont14"] + np.cos(((data["cat106"] < ((((math.tanh(0.847826) > ((data["cont14"] >= 0.0).astype(float))).astype(float)) <= data["cat115"]).astype(float))).astype(float))))).astype(float)))).astype(float))).astype(float))) +
        ((((((((data["cat72"] * ((data["cont14"] > np.cos(0.736264)).astype(float))) * (6.83015727996826172)) + data["cat1"]) + (((data["cat72"] * data["cat1"]) * (6.83015727996826172)) * 2.0))/2.0) * 2.0) + ((((np.minimum( (np.tanh((data["cat72"] + data["cat1"]))),  (0.736264)) >= 0.0).astype(float)) * ((data["cont14"] > np.cos(0.736264)).astype(float))) * (6.83015727996826172)))) +
        ((data["cat17"] + (((((-((-((-(np.minimum( (data["cat80"]),  (((data["cat112"] <= ((data["cat73"] < data["cat112"]).astype(float))).astype(float)))))))))) - ((data["cat73"] < data["cat112"]).astype(float))) * 2.0) + ((np.sin((np.sin(data["cat112"]) - np.sin(((data["cat73"] < data["cat112"]).astype(float))))) <= data["cat80"]).astype(float))) + (data["cat110"] * (3.141593 + data["cat112"]))))) +
        ((3.136360 * (np.minimum( (((data["cat91"] > ((data["cat93"] >= data["cont11"]).astype(float))).astype(float))),  (((data["cat77"] + data["cat93"]) * 9.869604))) + ((data["cat47"] + (((3.136360 * np.maximum( (data["cat19"]),  ((((9.869604 * np.maximum( (data["cont11"]),  (data["cat93"]))) * data["cat65"]) / 2.0)))) * data["cat65"]) / 2.0)) * 2.0)))) +
        ((np.maximum( ((((((data["cont7"] >= np.cos(((data["cat2"] + (np.minimum( (np.maximum( (data["cat17"]),  (data["cat100"]))),  ((0.847826 * 2.0))) * 2.0))/2.0))).astype(float)) + ((data["cont7"] >= np.cos((((((data["cont7"] >= np.cos(((data["cat17"] + ((data["cat2"] >= 0.0).astype(float)))/2.0))).astype(float)) + data["cat78"]) + ((data["cat2"] >= 0.0).astype(float)))/2.0))).astype(float))) * 2.0) * 2.0)),  (data["cat17"])) * 2.0)) +
        (((((((((data["cat116"] * ((np.minimum( (data["cont7"]),  (data["cat87"])) + (-(((data["cat80"] >= (((8.909090 >= data["cat115"]).astype(float)) * data["cat7"])).astype(float)))))/2.0)) * 2.0) * 2.0) * 2.0) * 2.0) + np.minimum( (data["cat116"]),  (((data["cat80"] >= np.minimum( (data["cat116"]),  (((data["cat2"] <= data["cat116"]).astype(float))))).astype(float))))) * 2.0) * 2.0)) +
        ((((((-(((data["cont2"] < np.tanh(data["cat72"])).astype(float)))) * 2.0) - (((((data["cont7"] < np.tanh(np.minimum( (data["cat72"]),  (data["cat81"])))).astype(float)) * 2.0) * 2.0) * 2.0)) - (np.minimum( ((data["cat101"] + ((data["cont2"] < data["cat72"]).astype(float)))),  (data["cat79"])) * 2.0)) - np.maximum( ((data["cat41"] * 2.0)),  (np.minimum( (data["cont10"]),  (((data["cat53"] >= 0.0).astype(float)))))))) +
        (((((((data["cat57"] * (data["cont12"] - (1.0/(1.0 + np.exp(- (((float(-1.0 > math.tanh((-1.0 + 1.052630)))) > (((data["cat31"] > (-1.0 + 1.052630)).astype(float)) + (data["cat57"] * (data["cont12"] - data["cat11"])))).astype(float))))))) * 2.0) + (-(((data["cat31"] > (-1.0 + 1.052630)).astype(float))))) * 2.0) * 2.0) * 2.0)) +
        ((((np.minimum( (np.maximum( (data["cat52"]),  (np.minimum( (np.maximum( (data["cat25"]),  ((np.minimum( (data["cat79"]),  (data["cont3"])) / 2.0)))),  (0.964912))))),  (1.0)) - ((((data["cat43"] > data["cat99"]).astype(float)) * ((data["cont5"] < ((data["cont3"] < (((data["cat79"] >= np.maximum( (data["cont3"]),  (np.minimum( (data["cat25"]),  (0.750000))))).astype(float)) / 2.0)).astype(float))).astype(float))) * 2.0)) * 2.0) * 2.0)) +
        (((data["cat11"] + ((data["cat23"] + (data["cat78"] * (((data["cat78"] + (data["cat113"] + ((8.909090 * data["cat111"]) + data["cat78"]))) * 2.0) * 2.0))) + (((8.909090 * np.minimum( (0.597222),  (data["cat27"]))) * 2.0) + (data["cat89"] + data["cat113"])))) * 2.0)) +
        (((((data["cat34"] + ((data["cat34"] + (((data["cont14"] * 2.0) <= np.sin((np.minimum( (((data["cat104"] <= data["cont2"]).astype(float))),  (((0.228571 <= data["cont14"]).astype(float)))) / 2.0))).astype(float))) * 2.0)) * 2.0) * 2.0) - (((((data["cont2"] <= data["cont2"]).astype(float)) / 2.0) >= (np.minimum( (data["cont2"]),  (((data["cont2"] <= (1.0/(1.0 + np.exp(- (data["cont14"] / 2.0))))).astype(float)))) * 2.0)).astype(float)))) +
        (((((((data["cat72"] - data["cat80"]) * ((np.sin((data["cat101"] * ((data["cat72"] >= (np.sin((data["cat101"] * ((data["cat81"] > np.tanh((-(data["cat36"])))).astype(float)))) * 2.0)).astype(float)))) >= 0.0).astype(float))) - (data["cat87"] * ((data["cat79"] < data["cat81"]).astype(float)))) * 2.0) * 2.0) * ((data["cat2"] < data["cat72"]).astype(float)))) +
        ((((data["cat80"] * ((((data["cat72"] >= data["cat9"]).astype(float)) <= ((data["cat109"] >= ((data["cat8"] > ((-1.0 + data["cat79"])/2.0)).astype(float))).astype(float))).astype(float))) * 2.0) + (np.maximum( ((data["cat81"] - ((data["cat72"] >= data["cat109"]).astype(float)))),  (((8.909090 + data["cat9"]) * data["cat96"]))) * 2.0))) +
        (((((((1.0/(1.0 + math.exp(- 1.208330))) <= (np.maximum( (data["cat44"]),  (data["cat26"])) + (1.0/(1.0 + np.exp(- (np.sin(data["cat81"]) - np.sin(np.sin((-(data["cat81"])))))))))).astype(float)) - ((data["cat26"] > (-((np.minimum( (data["cat81"]),  (math.tanh(1.208330))) - ((math.tanh(1.208330) <= (data["cat44"] + (1.0/(1.0 + np.exp(- (1.0/(1.0 + np.exp(- 1.208330)))))))).astype(float)))))).astype(float))) * 2.0) * 2.0)) +
        (((((np.minimum( (data["cat112"]),  (((data["cat81"] + data["cat103"])/2.0))) >= data["cat24"]).astype(float)) >= (np.sin(np.maximum( (((data["cat112"] - data["cat103"]) / 2.0)),  (((np.sin(np.maximum( (data["cat112"]),  ((np.maximum( (data["cat108"]),  ((data["cat103"] * (1.0/(1.0 + np.exp(- data["cat108"])))))) * 2.0)))) / 2.0) * 2.0)))) / 2.0)).astype(float))) +
        (((-(((data["cat112"] * 1.906980) * 1.906980))) + ((-((data["cat112"] * 1.906980))) + ((-(data["cont4"])) + ((((data["cont14"] > np.cos(((data["cat100"] >= 0.0).astype(float)))).astype(float)) * 2.0) + ((np.sin(np.tanh(((data["cat87"] > data["cat98"]).astype(float)))) >= data["cont4"]).astype(float))))))) +
        (np.minimum( ((data["cat39"] * (-((31.006277 - (((data["cat38"] > data["cont2"]).astype(float)) * data["cat38"])))))),  ((((((np.tanh((((0.636620 <= data["cat39"]).astype(float)) - ((data["cat38"] > data["cont2"]).astype(float)))) - ((data["cat53"] > data["cont2"]).astype(float))) - ((data["cat38"] > data["cont2"]).astype(float))) * 2.0) - ((data["cat53"] > data["cont2"]).astype(float))) * 2.0)))) +
        ((((((data["cat100"] * (data["cat114"] - ((data["cat114"] < data["cat9"]).astype(float)))) * 2.0) > (np.sin(((data["cat114"] < data["cat9"]).astype(float))) + data["cat9"])).astype(float)) + np.minimum( (np.minimum( (data["cat77"]),  ((data["cat114"] + (((((data["cat100"] * (data["cat114"] - np.sin(((data["cont14"] < data["cat9"]).astype(float))))) * 2.0) * 2.0) * 2.0) * 2.0))))),  (data["cat114"])))) +
        ((((((((data["cat81"] + data["cat36"])/2.0) + data["cat36"])/2.0) >= data["cat109"]).astype(float)) - ((np.minimum( (((data["cont6"] >= data["cat63"]).astype(float))),  (((data["cat38"] > data["cont7"]).astype(float)))) * 2.0) + ((data["cat67"] > ((-(data["cat49"])) - ((((data["cat103"] > ((np.maximum( (data["cat81"]),  (data["cat36"])) >= (-(data["cat49"]))).astype(float))).astype(float)) > (data["cont7"] + data["cat67"])).astype(float)))).astype(float))))) +
        ((np.maximum( (((data["cat38"] >= ((data["cat112"] <= ((data["cat36"] >= 0.0).astype(float))).astype(float))).astype(float))),  ((np.maximum( (data["cat96"]),  ((np.maximum( (data["cat115"]),  (((data["cont13"] <= (data["cat105"] - ((-(data["cat36"])) + np.tanh((data["cont4"] + ((-(data["cat36"])) * ((data["cat112"] > ((data["cat105"] <= ((data["cat112"] > data["cont4"]).astype(float))).astype(float))).astype(float)))))))).astype(float)))) * 2.0))) * 2.0))) * 2.0)) +
        ((np.minimum( ((-(((0.0 < ((data["cat5"] >= (9.750000 * ((((data["cat78"] + data["cat112"])/2.0) >= 0.0).astype(float)))).astype(float))).astype(float))))),  (((((((data["cat73"] * ((data["cat100"] >= 0.0).astype(float))) * 2.0) * 2.0) * ((data["cat100"] >= 0.0).astype(float))) * 2.0) * 2.0))) - (((np.minimum( (data["cat92"]),  (data["cat57"])) + data["cat116"]) >= 0.0).astype(float)))) +
        (((data["cont5"] + (data["cat100"] * (3.136360 * (np.maximum( (data["cat26"]),  ((3.136360 * (3.136360 * 3.136360)))) * np.maximum( (data["cat26"]),  (np.minimum( (np.minimum( (np.minimum( (data["cat113"]),  (((data["cat18"] <= (np.maximum( (data["cat116"]),  (np.minimum( (data["cat30"]),  (data["cat116"])))) * 2.0)).astype(float))))),  (data["cat113"]))),  (np.maximum( (data["cat93"]),  (data["cat100"]))))))))))/2.0)) +
        (((((((data["cont1"] > ((data["cat1"] < data["cat65"]).astype(float))).astype(float)) * ((data["cont14"] <= ((1.0/(1.0 + np.exp(- (data["cat10"] * np.tanh(((data["cat88"] <= data["cont1"]).astype(float))))))) / 2.0)).astype(float))) * 2.0) - (((data["cat41"] * (data["cat79"] + data["cat41"])) * 2.0) * 2.0)) - ((data["cont2"] < (data["cat101"] + np.sin(0.367879))).astype(float)))) +
        ((((((data["cat80"] + np.maximum( ((data["cat70"] - (9.869604 * (data["cat41"] * (0.717949 * 2.0))))),  (np.tanh(np.maximum( (data["cat80"]),  (data["cat45"])))))) * 2.0) * 2.0) * 2.0) * (-((-((data["cat41"] - (9.869604 * (data["cat41"] * np.maximum( (data["cat45"]),  (data["cat44"]))))))))))) +
        (((((np.maximum( (data["cat91"]),  (data["cat6"])) >= 0.228571).astype(float)) < np.sin(((((data["cat94"] >= 0.0).astype(float)) < (((data["cat82"] < (((data["cat42"] + np.maximum( (data["cat25"]),  ((((data["cat93"] <= np.maximum( (data["cat91"]),  ((data["cat12"] - np.tanh((data["cat109"] - data["cat6"])))))).astype(float)) - (data["cat51"] * 2.0)))))/2.0) / 2.0)).astype(float)) / 2.0)).astype(float)))).astype(float))) +
        (((1.570796 * ((((data["cat101"] + data["cat94"]) > data["cat7"]).astype(float)) * (1.570796 * (((data["cat94"] >= 0.0).astype(float)) * (2.718282 * (data["cat91"] * (data["cat48"] + (data["cont3"] * (2.718282 * (data["cat91"] * (((data["cat97"] <= data["cat94"]).astype(float)) + (((data["cont8"] > data["cat101"]).astype(float)) / 2.0)))))))))))) * 2.0)) +
        ((np.sin(np.sin(np.tanh(((data["cat99"] < data["cat47"]).astype(float))))) - ((((data["cont4"] >= (1.0/(1.0 + np.exp(- (data["cont8"] - ((0.847826 > np.sin((data["cont4"] * 2.0))).astype(float))))))).astype(float)) >= ((data["cont8"] + ((data["cont8"] - ((0.847826 > np.tanh(((-2.0 < data["cat47"]).astype(float)))).astype(float))) / 2.0))/2.0)).astype(float)))) +
        ((data["cont8"] - (((((np.cos(((((data["cat114"] < np.minimum( (data["cat100"]),  (data["cat9"]))).astype(float)) - (((data["cat9"] > data["cat100"]).astype(float)) / 2.0)) * 2.0)) < data["cat114"]).astype(float)) - (np.tanh((((-(data["cat9"])) <= np.minimum( (data["cat100"]),  ((data["cont8"] - np.minimum( (data["cat100"]),  (data["cat114"])))))).astype(float))) / 2.0)) * 2.0) * 2.0))) +
        ((((0.736264 >= (-((data["cat1"] - (data["cat6"] + (1.0/(1.0 + np.exp(- (-((np.sin(((data["cat12"] >= data["cont12"]).astype(float))) - np.maximum( (1.714290),  (1.714290))))))))))))).astype(float)) - ((np.sin(data["cat24"]) + (1.714290 * data["cat24"])) + data["cat54"]))) +
        ((np.maximum( (9.166670),  (9.869604)) * (((np.minimum( (0.964912),  (((data["cat101"] + np.minimum( (data["cat101"]),  (9.166670))) + ((((data["cat101"] >= data["cat80"]).astype(float)) <= data["cat72"]).astype(float))))) - (-((data["cat72"] * 2.0)))) + ((data["cat101"] - (-(data["cat101"]))) + data["cat80"])) * (-((data["cat66"] * 2.0)))))) +
        (((data["cat112"] * (((-((((data["cat112"] >= 0.0).astype(float)) - ((-(((data["cat98"] > data["cat109"]).astype(float)))) * 2.0)))) * 2.0) * 2.0)) + ((((data["cont7"] + ((-((((data["cat103"] * 2.0) > ((data["cat112"] / 2.0) * (((data["cat80"] * np.sin(data["cont7"])) + data["cont12"])/2.0))).astype(float)))) / 2.0))/2.0) < (data["cat111"] * 2.0)).astype(float)))) +
        (((data["cont1"] >= np.maximum( ((-(data["cat114"]))),  ((np.maximum( ((data["cat43"] / 2.0)),  (np.maximum( ((data["cat53"] * ((8.0) + 0.750000))),  ((0.750000 + ((data["cat3"] + (((np.tanh(np.maximum( (data["cat2"]),  (data["cat40"]))) * 2.0) >= (-(data["cat80"]))).astype(float)))/2.0)))))) + data["cat82"])))).astype(float))) +
        (((data["cat13"] * (((data["cat23"] <= np.minimum( (data["cat80"]),  ((-(((np.minimum( (data["cat85"]),  (np.sin(1.714290))) + data["cat100"])/2.0)))))).astype(float)) * (3.0 + 9.166670))) - ((data["cat23"] >= (data["cat100"] + (0.367879 - ((((data["cat13"] < data["cat9"]).astype(float)) < ((((data["cat76"] < 9.166670).astype(float)) < (data["cat80"] * 2.0)).astype(float))).astype(float))))).astype(float)))) +
        ((((((data["cat24"] * ((-(data["cat28"])) / 2.0)) >= 0.0).astype(float)) - ((data["cat12"] >= ((data["cat82"] > ((data["cat28"] + np.maximum( (data["cat82"]),  (((data["cat57"] > data["cat1"]).astype(float)))))/2.0)).astype(float))).astype(float))) - ((data["cat12"] >= ((data["cat82"] > ((data["cat57"] + ((data["cat12"] >= ((data["cat106"] < np.tanh(data["cat102"])).astype(float))).astype(float)))/2.0)).astype(float))).astype(float)))) +
        (((np.maximum( (data["cat34"]),  (((data["cat30"] >= np.maximum( (data["cat4"]),  (((data["cat112"] > data["cat16"]).astype(float))))).astype(float)))) <= ((np.sin(((data["cat84"] + data["cat16"])/2.0)) + ((np.maximum( (data["cat36"]),  (np.maximum( (np.maximum( (data["cat36"]),  (data["cat45"]))),  ((((((data["cat44"] > data["cat24"]).astype(float)) <= data["cat4"]).astype(float)) * np.maximum( (data["cat84"]),  ((data["cat45"] * data["cat44"])))))))) <= data["cat45"]).astype(float)))/2.0)).astype(float))) +
        ((-(((np.maximum( ((-(data["cat75"]))),  (((data["cat50"] > (data["cat14"] / 2.0)).astype(float)))) > ((data["cat49"] < (-(((data["cat75"] - (((data["cat104"] < (((data["cat49"] < (-(((data["cat75"] > (((data["cat104"] < ((((data["cat43"] < (-(data["cat116"]))).astype(float)) / 2.0) / 2.0)).astype(float)) / 2.0)).astype(float))))).astype(float)) / 2.0)).astype(float)) / 2.0)) / 2.0)))).astype(float))).astype(float))))) +
        ((data["cat103"] * ((data["cat71"] - (-((31.006277 * (data["cat84"] - (-(data["cat62"]))))))) + (31.006277 * (((data["cat84"] - (-(data["cat106"]))) - (data["cat102"] + (data["cont6"] * (data["cat3"] * (-(((data["cat71"] - 31.006277) * data["cat51"]))))))) - (-(data["cat71"]))))))) +
        (((((data["cont11"] >= (data["cat50"] + np.minimum( (np.cos(data["cat35"])),  ((((-(((data["cat45"] + (((((1.0/(1.0 + np.exp(- data["cat50"]))) >= 0.0).astype(float)) * data["cat51"]) - data["cont9"])) * 2.0))) >= 0.0).astype(float)))))).astype(float)) * 2.0) * 2.0)) +
        (np.minimum( ((((data["cat63"] - data["cat41"]) - data["cat41"]) - ((data["cont1"] <= ((np.sin(data["cat100"]) >= np.tanh(((np.sin(data["cat42"]) >= np.tanh(np.sin(np.maximum( ((-(data["cat82"]))),  (data["cat89"]))))).astype(float)))).astype(float))).astype(float)))),  ((-(((data["cat23"] >= ((data["cat100"] + ((np.sin((-(((data["cat42"] > (-(data["cat44"]))).astype(float))))) >= 0.0).astype(float)))/2.0)).astype(float))))))) +
        ((((-(((0.750000 >= ((data["cont2"] >= (np.maximum( (data["cat5"]),  (np.maximum( (data["cat5"]),  ((np.maximum( (np.minimum( (data["cat5"]),  (np.cos(0.597222)))),  (((np.maximum( (data["cont2"]),  ((data["cat91"] - (data["cat5"] - (data["cat80"] - ((data["cat80"] - data["cat28"]) / 2.0)))))) * 2.0) - data["cat10"]))) / 2.0))))) / 2.0)).astype(float))).astype(float)))) * 2.0) * 2.0)) +
        (np.maximum( (((data["cat80"] < (data["cat97"] - data["cont2"])).astype(float))),  (np.maximum( (((data["cat80"] < (np.sin(data["cat116"]) - data["cont2"])).astype(float))),  ((((((1.0/(1.0 + np.exp(- np.sin(data["cat116"])))) > ((data["cat80"] < ((np.sin(data["cat116"]) + (1.0/(1.0 + np.exp(- (((data["cont4"] - data["cont12"]) * 2.0) / 2.0))))) * 2.0)).astype(float))).astype(float)) * 2.0) * 2.0)))))) +
        (((((-(np.minimum( (data["cont9"]),  (((np.minimum( ((data["cat87"] + data["cat53"])),  (np.minimum( ((data["cat53"] + ((data["cat53"] / 2.0) * 2.0))),  (((((np.maximum( (data["cat42"]),  ((((data["cat17"] + ((data["cat53"] / 2.0) * 2.0)) <= data["cat13"]).astype(float)))) / 2.0) / 2.0) / 2.0) + ((data["cat99"] / 2.0) * 2.0)))))) >= 0.0).astype(float)))))) * 2.0) * 2.0) * 2.0)) +
        ((np.minimum( (((-(((data["cat101"] >= np.sin(np.sin(data["cont2"]))).astype(float)))) * 2.0)),  ((-(data["cat101"])))) - (((data["cat14"] - (((data["cat101"] >= (data["cont2"] + np.tanh(((data["cont2"] + np.tanh((1.906980 - (-(data["cont2"]))))) - data["cont11"])))).astype(float)) * 2.0)) * 2.0) * 2.0))) +
        ((((((data["cat94"] > ((np.maximum( (((data["cat1"] < data["cat94"]).astype(float))),  (data["cat101"])) >= ((data["cat18"] + ((((data["cat18"] + ((data["cat89"] + (-(data["cont6"])))/2.0))/2.0) + data["cat53"])/2.0))/2.0)).astype(float))).astype(float)) * 2.0) * 2.0) * 2.0)) +
        (((-(((data["cat33"] - ((-(((data["cat11"] > np.cos(np.maximum( (data["cat116"]),  (((data["cat87"] >= data["cat1"]).astype(float)))))).astype(float)))) * 2.0)) * 2.0))) + ((data["cat2"] + ((data["cat11"] > ((data["cat87"] >= np.tanh(data["cat1"])).astype(float))).astype(float))) + ((data["cat11"] > np.minimum( (0.964912),  (np.maximum( (np.sin(data["cat87"])),  (((data["cat87"] >= data["cat38"]).astype(float))))))).astype(float))))) +
        (((-((((np.maximum( (np.sin(data["cont7"])),  ((np.maximum( (np.tanh(data["cont3"])),  (data["cont7"])) / 2.0))) <= ((1.0/(1.0 + np.exp(- np.minimum( (np.minimum( ((data["cat94"] + (data["cat11"] / 2.0))),  ((1.732051 + (0.228571 + data["cat94"]))))),  (np.sin(np.sin(data["cont7"]))))))) / 2.0)).astype(float)) * 2.0))) * 2.0)) +
        (((-(((np.tanh(((data["cat32"] * ((data["cat111"] >= 0.0).astype(float))) + ((((data["cat108"] * np.cos(data["cat2"])) - np.maximum( (((data["cat111"] >= 0.0).astype(float))),  (((data["cat116"] <= ((data["cat2"] < np.maximum( (data["cat108"]),  ((-((data["cat12"] - np.maximum( (data["cat108"]),  ((-((data["cat12"] - data["cat32"]))))))))))).astype(float))).astype(float))))) >= 0.0).astype(float)))) * 2.0) * 2.0))) * 2.0)) +
        ((((-(np.minimum( (np.minimum( (data["cat1"]),  (data["cat109"]))),  ((-(data["cat12"])))))) >= (((np.minimum( (data["cat82"]),  (((data["cat91"] < ((np.minimum( (np.minimum( (data["cat72"]),  (data["cat72"]))),  (data["cat81"])) >= 0.0).astype(float))).astype(float)))) * data["cat6"]) < ((np.minimum( (np.minimum( (data["cat72"]),  (data["cat6"]))),  (data["cat81"])) >= 0.0).astype(float))).astype(float))).astype(float))) +
        ((data["cat84"] - ((data["cont5"] <= ((((data["cat16"] > (data["cat114"] - np.tanh(np.maximum( (data["cat49"]),  (data["cat84"]))))).astype(float)) < np.maximum( (data["cat28"]),  (np.maximum( (data["cat108"]),  (((data["cat114"] >= ((np.maximum( (data["cat31"]),  (((data["cat84"] >= np.sin(((data["cat100"] >= 0.0).astype(float)))).astype(float)))) >= np.tanh(np.maximum( (data["cat49"]),  (data["cat13"])))).astype(float))).astype(float))))))).astype(float))).astype(float)))) +
        ((((0.367879 > ((data["cat78"] + np.sin(((0.597222 > ((((((((0.367879 + data["cat103"])/2.0) + ((data["cont9"] > np.cos(31.006277)).astype(float))) >= ((1.011360 + data["cat27"])/2.0)).astype(float)) > ((data["cat106"] + (((((data["cat87"] / 2.0) < data["cont1"]).astype(float)) + data["cat103"])/2.0))/2.0)).astype(float)) * 2.0)).astype(float)))) / 2.0)).astype(float)) * 2.0)) +
        ((np.minimum( ((data["cat19"] * -3.0)),  (((-((((-(np.minimum( (data["cat9"]),  ((-(data["cat92"])))))) >= ((data["cat79"] <= (data["cat15"] - np.maximum( (data["cat5"]),  (data["cat19"])))).astype(float))).astype(float)))) * 2.0))) - (1.714290 * ((data["cat61"] * 2.0) * 2.0)))) +
        ((((data["cat103"] > (1.0/(1.0 + np.exp(- -3.0)))).astype(float)) - (data["cat81"] * (-(((data["cat79"] * 2.0) * ((data["cat79"] * 2.0) * ((data["cat79"] * 2.0) * np.maximum( (data["cat82"]),  (((np.minimum( ((data["cat79"] * 2.0)),  (data["cat25"])) <= (-(data["cat13"]))).astype(float)))))))))))) +
        (((-((((((data["cat80"] - ((((np.sin(data["cat90"]) + ((data["cat103"] >= np.minimum( (data["cat21"]),  (((data["cat36"] > data["cat23"]).astype(float))))).astype(float)))/2.0) < (-(data["cat23"]))).astype(float))) + ((data["cat103"] >= data["cat23"]).astype(float)))/2.0) + ((data["cat103"] >= data["cat23"]).astype(float)))/2.0))) - (-((data["cat92"] * np.maximum( (data["cat35"]),  (8.909090))))))) +
        (np.cos((data["cont14"] - (((data["cont14"] * 31.006277) + (2.718282 - ((((((data["cont14"] * 31.006277) + (1.0/(1.0 + np.exp(- ((np.minimum( (np.sin((data["cont14"] * 31.006277))),  (31.006277)) >= 0.0).astype(float))))))/2.0) * 31.006277) + (-(data["cont14"])))/2.0)))/2.0)))) +
        ((np.maximum( (((data["cat28"] >= np.sin(np.maximum( (data["cat79"]),  ((data["cat28"] - data["cat16"]))))).astype(float))),  (((np.maximum( ((data["cat51"] + (data["cat59"] * np.cos(np.maximum( (data["cat28"]),  (((((data["cat57"] >= 0.0).astype(float)) - data["cat27"]) * 2.0))))))),  (((((data["cat56"] * 2.0) * (data["cat56"] * 2.0)) * 2.0) * 2.0))) * 2.0) * 2.0))) * 2.0)) +
        ((((data["cat19"] <= data["cat37"]).astype(float)) * ((-(data["cat2"])) + (np.minimum( ((((((data["cat19"] >= data["cat4"]).astype(float)) + (np.minimum( (((-(data["cat114"])) * 2.0)),  (data["cat86"])) * 2.0)) * 2.0) * 2.0)),  (data["cat114"])) + (np.minimum( ((-(data["cat2"]))),  (np.sin(((data["cat103"] + (-(data["cat4"])))/2.0)))) * 2.0))))) +
        ((((data["cat111"] >= (((np.sin(np.cos(data["cat101"])) / 2.0) / 2.0) / 2.0)).astype(float)) + ((data["cont6"] <= ((data["cat100"] > (((((data["cat98"] > ((data["cat23"] <= (data["cat100"] - ((data["cat101"] > ((data["cat101"] > data["cont6"]).astype(float))).astype(float)))).astype(float))).astype(float)) * 2.0) < ((data["cat100"] / 2.0) / 2.0)).astype(float))).astype(float))).astype(float)))) +
        ((np.minimum( ((np.maximum( (data["cat38"]),  (data["cat24"])) * (-((((data["cat116"] <= data["cat22"]).astype(float)) * 2.0))))),  ((-((((data["cont1"] < (data["cat80"] - ((data["cat116"] <= (data["cat38"] * (-((((-2.0 <= data["cat38"]).astype(float)) * 2.0))))).astype(float)))).astype(float)) * 2.0))))) * 2.0)) +
        (((np.maximum( (((1.570796 <= (data["cat79"] + ((data["cat86"] + (data["cat72"] - (data["cat28"] + data["cat57"]))) * 2.0))).astype(float))),  ((data["cat12"] * ((data["cat81"] > ((data["cat79"] >= (data["cat81"] * data["cat2"])).astype(float))).astype(float))))) * 2.0) * 2.0)) +
        ((-(((data["cat73"] + ((data["cat78"] >= ((data["cat113"] + ((((data["cat78"] + ((data["cat48"] + np.maximum( (data["cont10"]),  (data["cat113"])))/2.0))/2.0) > (data["cat101"] - data["cat54"])).astype(float)))/2.0)).astype(float))) + ((data["cat78"] >= ((data["cat54"] + ((0.736264 > (0.736264 - ((data["cat54"] + ((0.736264 > (data["cont10"] - data["cat113"])).astype(float)))/2.0))).astype(float)))/2.0)).astype(float)))))) +
        (((((((data["cat91"] < ((data["cat80"] - (data["cat34"] * 2.0)) - ((data["cat36"] <= ((((data["cat9"] + ((((data["cat81"] >= data["cont5"]).astype(float)) <= data["cat81"]).astype(float)))/2.0) >= (data["cat73"] * data["cat81"])).astype(float))).astype(float)))).astype(float)) * 2.0) * 2.0) * 2.0) - ((data["cat81"] >= data["cont5"]).astype(float)))) +
        ((data["cat79"] * (((data["cat79"] * (-((((data["cat82"] < np.minimum( (data["cat94"]),  (((data["cat75"] < ((np.tanh(data["cat82"]) < (((data["cat100"] + data["cat82"]) < ((data["cat79"] < np.minimum( (data["cat16"]),  (np.minimum( (data["cat75"]),  ((data["cat94"] * 2.0)))))).astype(float))).astype(float))).astype(float))).astype(float))))).astype(float)) * 2.0)))) * 1.714290) * 2.0))) +
        (((((data["cat88"] > ((data["cont2"] <= data["cat1"]).astype(float))).astype(float)) / 2.0) - (((((((data["cat43"] >= 0.0).astype(float)) <= np.maximum( ((1.0/(1.0 + np.exp(- data["cat43"])))),  ((1.0/(1.0 + np.exp(- np.maximum( (data["cat30"]),  ((((0.0) > ((data["cat43"] >= 0.0).astype(float))).astype(float)))))))))).astype(float)) <= data["cat30"]).astype(float)) - (((data["cat114"] >= ((data["cont4"] <= ((((data["cat43"] >= 0.0).astype(float)) > (data["cat115"] / 2.0)).astype(float))).astype(float))).astype(float)) / 2.0)))) +
        ((((((data["cat3"] >= ((data["cat7"] >= (-(data["cat29"]))).astype(float))).astype(float)) - ((((data["cat4"] - ((data["cat51"] > (data["cat32"] - np.minimum( (data["cat4"]),  (data["cat91"])))).astype(float))) * 2.0) / 2.0) * 2.0)) - (((data["cat3"] * 2.0) * ((data["cat4"] <= (data["cat55"] - data["cat113"])).astype(float))) * 2.0)) - data["cat4"])) +
        (np.minimum( (np.tanh(data["cat112"])),  (((((((((0.511111 <= np.sin(data["cont10"])).astype(float)) - ((data["cat44"] >= data["cat86"]).astype(float))) + data["cat91"]) - ((data["cat91"] >= ((data["cat2"] < data["cat112"]).astype(float))).astype(float))) + data["cat114"]) - ((data["cat44"] >= ((data["cat2"] < data["cat112"]).astype(float))).astype(float))) - ((data["cat44"] >= ((data["cat2"] < data["cat112"]).astype(float))).astype(float)))))) +
        (((((data["cat100"] > ((data["cat88"] < (data["cont6"] - np.maximum( (np.maximum( (((data["cat10"] + data["cont7"])/2.0)),  (0.318310))),  (0.318310)))).astype(float))).astype(float)) * ((data["cont2"] * 2.0) + (data["cont2"] * 2.0))) * ((np.tanh(np.maximum( (data["cat102"]),  ((((1.0/(1.0 + np.exp(- data["cat108"]))) <= data["cont7"]).astype(float))))) > (((data["cat13"] + data["cont7"])/2.0) - data["cont13"])).astype(float)))) +
        ((np.tanh(((data["cat103"] <= ((np.sin((-((data["cat103"] + ((data["cat80"] / 2.0) / 2.0))))) <= data["cat2"]).astype(float))).astype(float))) - (((np.minimum( (data["cat82"]),  (data["cat82"])) / 2.0) >= np.minimum( ((data["cat103"] + (data["cat13"] / 2.0))),  (np.minimum( (((data["cat84"] * 2.0) + (data["cat103"] / 2.0))),  (((data["cat84"] * 2.0) * 2.0)))))).astype(float)))) +
        (((data["cat75"] <= ((((data["cat50"] * (-(data["cat1"]))) - ((0.847826 < ((np.sin(data["cat6"]) < (data["cat100"] - ((((-(((((-(data["cat1"])) + data["cat50"])/2.0) + (0.318310 * np.tanh(data["cat50"]))))) >= 0.0).astype(float)) / 2.0))).astype(float))).astype(float))) * 2.0) * 2.0)).astype(float))) +
        (((data["cat30"] - (data["cat30"] - data["cont7"])) - ((0.750000 - (-3.0 * np.maximum( (data["cat30"]),  ((((data["cat81"] + data["cat40"]) > np.maximum( ((data["cont7"] * 2.0)),  (((data["cat1"] >= 0.0).astype(float))))).astype(float)))))) - (-3.0 * (((np.tanh(data["cat53"]) + data["cat81"]) > ((data["cat1"] >= 0.0).astype(float))).astype(float)))))) +
        ((np.minimum( (((data["cat113"] <= data["cat81"]).astype(float))),  (np.maximum( (np.maximum( (data["cat113"]),  (((((data["cat113"] > data["cat72"]).astype(float)) > data["cat81"]).astype(float))))),  (data["cat49"])))) + (((data["cat72"] * data["cat73"]) + np.minimum( (((0.597222 <= data["cat81"]).astype(float))),  (((data["cat113"] > data["cat72"]).astype(float))))) + ((((data["cat81"] >= ((data["cat113"] > data["cat73"]).astype(float))).astype(float)) <= data["cat81"]).astype(float))))) +
        ((data["cat1"] * (data["cat116"] + np.minimum( (31.006277),  (((((data["cat116"] + ((data["cat79"] * ((data["cat79"] * ((data["cat108"] >= np.sin(data["cat17"])).astype(float))) - ((data["cat91"] >= (data["cat17"] * data["cat1"])).astype(float)))) - ((data["cat91"] >= (data["cat17"] * data["cat1"])).astype(float)))) * 2.0) * 2.0) * 2.0)))))) +
        (((((-((data["cat72"] * ((data["cat73"] <= data["cat25"]).astype(float))))) + ((data["cat25"] <= (data["cat111"] + ((-(np.maximum( (data["cat12"]),  (np.maximum( (0.228571),  (np.maximum( (data["cat28"]),  (data["cat72"])))))))) / 2.0))).astype(float))) - np.maximum( (data["cat36"]),  (((data["cat72"] * (-(((data["cat90"] <= data["cat73"]).astype(float))))) + data["cat115"])))) * 2.0)) +
        (((data["cat79"] >= (((((1.414214 + data["cat112"])/2.0) >= 0.0).astype(float)) + np.maximum( (np.maximum( (np.tanh((data["cat84"] - data["cat115"]))),  (np.tanh((data["cat112"] - data["cat90"]))))),  (np.tanh(((data["cat84"] - data["cat37"]) - (data["cat9"] * ((data["cat115"] >= (data["cat52"] - ((data["cont13"] < (data["cat84"] - data["cat1"])).astype(float)))).astype(float))))))))).astype(float))) +
        (((data["cat30"] + ((((data["cat69"] <= ((np.sin(data["cat28"]) > data["cat64"]).astype(float))).astype(float)) + ((-(0.318310)) - (-(((np.sin(data["cat28"]) >= 0.0).astype(float)))))) - 0.318310)) * (1.570796 * (3.136360 * (-(((0.318310 <= np.maximum( (data["cat30"]),  (data["cat61"]))).astype(float)))))))) +
        ((data["cat46"] + ((((data["cat99"] >= (((((data["cat99"] >= (((data["cat113"] <= (np.tanh(np.cos(((((data["cat80"] > data["cat113"]).astype(float)) + (data["cat80"] / 2.0)) + data["cat105"]))) / 2.0)).astype(float)) / 2.0)).astype(float)) * 2.0) <= (np.tanh(np.cos(((((data["cat84"] * 2.0) > np.tanh(data["cat113"])).astype(float)) + data["cat105"]))) / 2.0)).astype(float))).astype(float)) * 2.0) * 2.0))) +
        ((((data["cat100"] > ((((data["cat82"] >= 0.0).astype(float)) * (np.maximum( (data["cat80"]),  (1.208330)) * data["cat37"])) / 2.0)).astype(float)) * ((data["cont2"] - ((np.minimum( (data["cat82"]),  (9.869604)) <= data["cat53"]).astype(float))) - (((data["cat37"] * (1.0/(1.0 + np.exp(- ((np.sin(data["cat68"]) <= data["cat100"]).astype(float)))))) <= ((data["cat84"] + data["cat70"])/2.0)).astype(float))))) +
        (((((np.minimum( ((data["cat12"] - data["cont5"])),  (data["cat105"])) >= 0.0).astype(float)) < ((data["cat2"] > ((((data["cat79"] > (np.minimum( (((0.597222 > (((((data["cat105"] >= 0.0).astype(float)) >= (data["cat105"] / 2.0)).astype(float)) / 2.0)).astype(float))),  (data["cont4"])) * 2.0)).astype(float)) <= ((data["cat9"] - ((data["cat2"] < ((data["cat48"] < data["cat40"]).astype(float))).astype(float))) - data["cat12"])).astype(float))).astype(float))).astype(float))) +
        (((data["cat101"] * np.minimum( (((-(((np.minimum( (data["cat54"]),  (data["cat75"])) >= 0.0).astype(float)))) * 2.0)),  (((np.tanh(data["cat33"]) < data["cat1"]).astype(float))))) - ((data["cat4"] >= ((np.tanh(data["cat33"]) < (np.maximum( (data["cat1"]),  (np.minimum( (data["cat101"]),  (np.minimum( (data["cat4"]),  (data["cat33"])))))) * ((np.cos(data["cat70"]) < ((np.cos(data["cat51"]) / 2.0) * 2.0)).astype(float)))).astype(float))).astype(float)))) +
        (((0.964912 > (-((data["cat54"] - np.cos((data["cat66"] + ((np.minimum( ((data["cat82"] / 2.0)),  (data["cont14"])) >= (((data["cat49"] < (((data["cont13"] - np.tanh(((data["cont14"] <= data["cat100"]).astype(float)))) / 2.0) / 2.0)).astype(float)) * 2.0)).astype(float)))))))).astype(float))) +
        (np.minimum( (((data["cat9"] >= 2.0).astype(float))),  ((data["cat1"] * ((np.maximum( ((-(data["cat109"]))),  (np.maximum( (data["cat66"]),  (((np.maximum( (data["cat12"]),  (np.maximum( (data["cat80"]),  (((data["cat100"] >= np.cos((np.tanh((np.tanh((((data["cat2"] < np.minimum( (data["cat66"]),  (data["cat69"]))).astype(float)) / 2.0)) * 2.0)) * 2.0))).astype(float)))))) * 2.0) * 2.0))))) * 2.0) * 2.0))))) +
        (((data["cont14"] > np.cos((data["cat18"] + ((((data["cat101"] + np.maximum( ((((data["cat72"] <= data["cat38"]).astype(float)) * ((data["cat82"] <= (data["cat18"] + data["cat103"])).astype(float)))),  ((((data["cat38"] + np.maximum( (data["cat72"]),  (((data["cat82"] <= data["cat103"]).astype(float)))))/2.0) * np.sin(((data["cat103"] >= data["cat18"]).astype(float)))))))/2.0) >= 0.0).astype(float))))).astype(float))) +
        (np.sin(np.maximum( ((data["cont6"] - (((5.68050909042358398) * data["cat100"]) * 2.0))),  (((5.68051242828369141) * (((((5.68050909042358398) * (((data["cat71"] < (data["cont6"] - (((5.68050909042358398) * data["cat105"]) * 2.0))).astype(float)) - (data["cat100"] * data["cat100"]))) >= 0.0).astype(float)) - (((5.68050909042358398) * data["cat100"]) * 2.0))))))) +
        ((((data["cat87"] * 2.0) * 2.0) * (-(np.cos(((((data["cat105"] <= np.minimum( (np.minimum( (np.maximum( (data["cat107"]),  (np.cos((((data["cat105"] <= np.minimum( (data["cat40"]),  (data["cat54"]))).astype(float)) * 2.0))))),  (np.minimum( (data["cat38"]),  (data["cat97"]))))),  ((data["cat97"] * 2.0)))).astype(float)) * 2.0) * 2.0)))))) +
        (((-(data["cat1"])) - (data["cat113"] + (((data["cat46"] > np.maximum( (data["cat80"]),  (np.maximum( (data["cat30"]),  ((((-(((data["cat113"] > data["cat91"]).astype(float)))) * ((((data["cat30"] <= data["cat73"]).astype(float)) >= (((data["cat91"] / 2.0) <= data["cat46"]).astype(float))).astype(float))) / 2.0)))))).astype(float)) / 2.0)))) +
        (((((np.minimum( (((np.minimum( ((data["cat99"] * ((data["cat2"] * 2.0) * 2.0))),  ((data["cat2"] * 2.0))) >= 0.0).astype(float))),  (((data["cat2"] * 2.0) * 2.0))) * 2.0) * 2.0) + ((np.minimum( ((data["cat19"] * np.cos(np.minimum( (0.964912),  ((data["cat58"] * 2.0)))))),  (data["cat58"])) >= 0.0).astype(float))) * ((data["cat40"] >= (((data["cat35"] >= data["cat40"]).astype(float)) * 2.0)).astype(float)))) +
        (((np.maximum( (data["cat73"]),  (np.maximum( (data["cat17"]),  ((((-(np.maximum( (data["cat17"]),  (np.maximum( (data["cat100"]),  (((((data["cat73"] > (data["cat53"] * ((data["cat99"] < data["cat53"]).astype(float)))).astype(float)) > (data["cat53"] * ((data["cat104"] >= data["cat81"]).astype(float)))).astype(float)))))))) >= 0.0).astype(float)))))) > ((data["cat116"] + (1.0/(1.0 + np.exp(- ((data["cat54"] + data["cat73"])/2.0)))))/2.0)).astype(float))) +
        (((((((((data["cat102"] >= (1.0/(1.0 + np.exp(- ((((data["cat80"] < data["cont14"]).astype(float)) >= data["cat47"]).astype(float)))))).astype(float)) >= ((0.367879 >= (data["cat67"] - ((((0.367879 >= np.sin(data["cont6"])).astype(float)) < ((data["cat80"] < (1.0/(1.0 + np.exp(- data["cat47"])))).astype(float))).astype(float)))).astype(float))).astype(float)) * 2.0) * 2.0) * 2.0) * 2.0)) +
        (((data["cat111"] > ((((data["cat49"] - (np.cos(((data["cat94"] > data["cat107"]).astype(float))) - ((data["cat26"] > ((np.minimum( (data["cat84"]),  (((data["cat84"] + ((np.minimum( (np.minimum( (((data["cat94"] > data["cat94"]).astype(float))),  (data["cat50"]))),  (((data["cat26"] + (1.0/(1.0 + np.exp(- data["cat21"]))))/2.0))) + data["cat111"])/2.0))/2.0))) + np.minimum( (data["cat103"]),  (data["cat75"])))/2.0)).astype(float)))) * 2.0) >= 0.0).astype(float))).astype(float))))

    return (.01*p)


def GrabNParse():
    directory = '../input/'
    train = pd.read_csv(directory+'train.csv')
    test = pd.read_csv(directory+'test.csv')
    test['loss'] = 0
    stdloss = train.loss.std()
    meanloss = train.loss.mean()
    train.loss -= meanloss
    train.loss /= stdloss
    print('Loss Standard Deviation:', stdloss)
    print('Loss Mean:', meanloss)
    visibletrain = pd.concat([train[1::4], train[2::4], train[3::4]]).copy()
    blindtrain = train[::4].copy()
    cats = [x for x in train.columns if 'cat' in x]
    for col in cats:
        test.loc[:, col] = NaiveBayes(train,
                                      test, col, False,
                                      10).values

        blindtrain.loc[:, col] = NaiveBayes(train,
                                            blindtrain,
                                            col, False, 10).values

        visibletrain.loc[:, col] = NaiveBayes(train,
                                              visibletrain,
                                              col, True, 10).values
    return visibletrain, blindtrain, test


if __name__ == "__main__":
    print('Started')
    visibletrain, blindtrain, test = GrabNParse()
    predictions = GP(visibletrain) * 2904.0861863904365 + 3037.3376856699792
    print('V MAE', mean_absolute_error(visibletrain.loss * 2904.0861863904365 +
                                       3037.3376856699792, predictions))
    predictions = GP(blindtrain) * 2904.0861863904365 + 3037.3376856699792
    print('B MAE:', mean_absolute_error(blindtrain.loss * 2904.0861863904365 +
                                        3037.3376856699792, predictions))
    predictions = GP(test) * 2904.0861863904365 + 3037.3376856699792
    submission = pd.DataFrame({'id': test.id, 'loss': predictions})
    submission.to_csv('gpsubmission.csv', index=False)

    print('Finished')